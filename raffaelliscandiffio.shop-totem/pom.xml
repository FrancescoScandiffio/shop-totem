<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.github.raffaelliscandiffio</groupId>
	<artifactId>shop-totem</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<properties>
		<skipTests>false</skipTests>
		<skipUTs>${skipTests}</skipUTs>
		<skipITs>false</skipITs>
		<skipBDDs>${skipITs}</skipBDDs>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>

		<junit.jupiter.version>5.8.1</junit.jupiter.version>
		<assertj.core.version>3.21.0</assertj.core.version>

		<mockito.version>4.2.0</mockito.version>
		<assertj.swing.version>3.17.1</assertj.swing.version>

		<log4j.version>2.17.1</log4j.version>
		<mongo.driver.version>3.12.10</mongo.driver.version>
		<logback.classic>1.2.10</logback.classic>
		<mongo.java.server.version>1.39.0</mongo.java.server.version>

		<mysql.version>8.0.28</mysql.version>
		<hibernate.version>5.4.24.Final</hibernate.version>

		<picocli.version>4.6.2</picocli.version>
		<awaitility.version>4.1.1</awaitility.version>

		<jbehave.version>5.0</jbehave.version>

		<sonar.coverage.exclusions>
			**/model/Product.java,
			**/model/Stock.java,
			**/model/OrderItem.java,
			**/model/Order.java,
			**/model/OrderStatus.java,
			**/utils/GUITestExtension.java,
			**/app/**/*
		</sonar.coverage.exclusions>

		<sonar.junit.reportPaths>
			${project.build.directory}/surefire-reports,
			${project.build.directory}/failsafe-reports
		</sonar.junit.reportPaths>

		<sonar.issue.ignore.multicriteria>e1,e2,e3,e4</sonar.issue.ignore.multicriteria>
		<!-- disable rule on naming convention -->
		<sonar.issue.ignore.multicriteria.e1.ruleKey>
			java:S117
		</sonar.issue.ignore.multicriteria.e1.ruleKey>
		<sonar.issue.ignore.multicriteria.e1.resourceKey>
			**/swing/*
		</sonar.issue.ignore.multicriteria.e1.resourceKey>

		<!-- disable rule on missing assertion -->
		<sonar.issue.ignore.multicriteria.e2.ruleKey>
			java:S2699
		</sonar.issue.ignore.multicriteria.e2.ruleKey>
		<sonar.issue.ignore.multicriteria.e2.resourceKey>
			**/swing/*Test*
		</sonar.issue.ignore.multicriteria.e2.resourceKey>
		<sonar.issue.ignore.multicriteria.e3.ruleKey>
			java:S2699
		</sonar.issue.ignore.multicriteria.e3.ruleKey>
		<sonar.issue.ignore.multicriteria.e3.resourceKey>
			**/controller/TotemControllerIT*
		</sonar.issue.ignore.multicriteria.e3.resourceKey>

		<!-- disable rule on static access -->
		<sonar.issue.ignore.multicriteria.e4.ruleKey>
			java:S3252
		</sonar.issue.ignore.multicriteria.e4.ruleKey>
		<sonar.issue.ignore.multicriteria.e4.resourceKey>
			**/swing/TotemSwingView*
		</sonar.issue.ignore.multicriteria.e4.resourceKey>

		<!-- disable rule on cognitive complexity -->
		<sonar.issue.ignore.multicriteria.e5.ruleKey>
			java:S3776
		</sonar.issue.ignore.multicriteria.e5.ruleKey>
		<sonar.issue.ignore.multicriteria.e5.resourceKey>
			**/swing/CartPanel*
		</sonar.issue.ignore.multicriteria.e5.resourceKey>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-bom</artifactId>
				<version>${log4j.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit.jupiter.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<version>${junit.jupiter.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj.core.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-swing-junit</artifactId>
			<version>${assertj.swing.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
			<version>${mongo.driver.version}</version>
		</dependency>
		<dependency>
			<!-- required to see Mongo Java Driver logs -->
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.classic}</version>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-c3p0</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/info.picocli/picocli -->
		<dependency>
			<groupId>info.picocli</groupId>
			<artifactId>picocli</artifactId>
			<version>${picocli.version}</version>
		</dependency>

		<dependency>
			<groupId>org.awaitility</groupId>
			<artifactId>awaitility</artifactId>
			<version>${awaitility.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jbehave</groupId>
			<artifactId>jbehave-core</artifactId>
			<version>${jbehave.version}</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<pluginManagement>
			<!-- Specify plug-in versions -->
			<plugins>

				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.2.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.2.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-install-plugin</artifactId>
					<version>3.0.0-M1</version>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>3.0.0-M2</version>
				</plugin>

				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.22.2</version>
				</plugin>

				<plugin>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>2.22.2</version>
				</plugin>

				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.9.1</version>
				</plugin>

				<!-- Configuring code coverage -->
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>0.8.7</version>
					<configuration>
						<excludes>
							<exclude>**/model/*</exclude>
							<exclude>**/utils/GUITestExtension.class</exclude>
							<exclude>**/app/**/*</exclude>
						</excludes>
					</configuration>
					<executions>
						<execution>
							<goals>
								<!-- binds by default to the phase "initialize" -->
								<goal>prepare-agent</goal>
								<!-- binds by default to the phase "verify" -->
								<goal>report</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

			</plugins>
		</pluginManagement>


		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>8</source>
					<target>8</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>3.9.1.2184</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skipTests>${skipUTs}</skipTests>
				</configuration>
			</plugin>

			<!-- Manually add source folders -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.3.0</version>
				<executions>
					<execution>
						<id>add-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/it/java</source>
								<source>src/bdd/java</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<id>add-test-resource</id>
						<phase>generate-test-resources</phase>
						<goals>
							<goal>add-test-resource</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>src/bdd/resources</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>3.0.0-M5</version>
				<executions>
					<execution>
						<id>Integrations</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<includes>
								<include>**/*IT.java</include>
							</includes>
							<excludes>
								<exclude>**/*BDD.java</exclude>
							</excludes>
						</configuration>
					</execution>
					<execution>
						<id>bdd-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<skipITs>${skipBDDs}</skipITs>
							<excludes>
								<exclude>**/*IT.java</exclude>
							</excludes>
							<includes>
								<include>**/*BDD.java</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Coveralls -->
			<plugin>
				<groupId>org.eluder.coveralls</groupId>
				<artifactId>coveralls-maven-plugin</artifactId>
				<version>4.3.0</version>
				<dependencies>
					<!-- This is required when using JDK 9 or higher since javax.xml.bind 
						has been removed from the JDK -->
					<dependency>
						<groupId>javax.xml.bind</groupId>
						<artifactId>jaxb-api</artifactId>
						<version>2.3.1</version>
					</dependency>
				</dependencies>
			</plugin>

			<!-- Mutation testing -->
			<plugin>
				<groupId>org.pitest</groupId>
				<artifactId>pitest-maven</artifactId>
				<version>1.7.3</version>
				<dependencies>
					<dependency>
						<groupId>org.pitest</groupId>
						<artifactId>pitest-junit5-plugin</artifactId>
						<version>0.14</version>
					</dependency>
				</dependencies>
				<configuration>

					<excludedClasses>
						<param>${project.groupId}.model.*</param>
						<param>${project.groupId}.view.swing.*</param>

						<!-- Exclude because there are no UT -->
						<param>${project.groupId}.repository.*</param>
						<param>${project.groupId}.transaction.*</param>
						<param>${project.groupId}.app.*</param>

					</excludedClasses>
					<targetTests>
						<!-- Run mutation testing only on unit tests -->
						<param>${project.groupId}.*Test</param>
					</targetTests>
					<excludedTestClasses>
						<param>${project.groupId}.*ViewTest</param>
					</excludedTestClasses>
					<mutators>
						STRONGER
					</mutators>
					<mutationThreshold>100</mutationThreshold>
				</configuration>
			</plugin>

			<!-- Start docker containers with databases for Integration Tests -->
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.40.0</version>
				<configuration>
					<images>
						<image>
							<name>mysql:8.0.29</name>
							<run>
								<wait>
									<log>mysqld: ready for connections</log>
									<time>60000</time>
								</wait>
								<env>
									<MYSQL_ALLOW_EMPTY_PASSWORD>1</MYSQL_ALLOW_EMPTY_PASSWORD>
									<MYSQL_DATABASE>totem</MYSQL_DATABASE>
								</env>
								<ports>
									<port>3306:3306</port>
								</ports>
							</run>
						</image>
						<image>
							<name>candis/mongo-replica-set</name>
							<run>
								<wait>
									<log>connecting to</log>
									<time>60000</time>
								</wait>
								<ports>
									<port>27017:27017</port>
									<port>27018:27018</port>
									<port>27019:27019</port>
								</ports>
							</run>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<id>docker:start</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>docker:stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>jacoco</id>
			<activation>
				<!-- Activated when the system property "skipCoverage" is not defined 
					at all or is defined with a value which is not "true", thus, implicitly active 
					by default -->
				<property>
					<name>skipCoverage</name>
					<value>!true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<!-- configured in pluginManagement -->
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>